@use './variables' as v;
@use '../utilities/functions' as f;
@use '../utilities/mixins' as m;

h1 {
    // margin: v.$msmall;
    // padding: v.$msmall;
    font-size: v.$medium_font !important;
    text-transform: capitalize;
}

h2 {
    font-size: v.$small_font;
}
h2::first-letter {
    text-transform: uppercase;
}

h3 {
    // margin: v.$tiny;
    // padding: v.$tiny;
    font-size: v.$msmall_font;
    text-transform: capitalize;
}

h4 {
    font-size: v.$xsmall_font;
}

// p {
//     // margin: v.$small;
//     // padding: v.$small;
// }

a {
    text-decoration: none;
}

li {
    list-style: none;
}

input::-webkit-search-cancel-button{
    display: none;
}

input[type="search"] {
    display: block;
    width: 100%;
    height: 5dvh;
    border-radius: v.$small;
    border: f.rem(.1) solid v.$color_primary;
    padding: v.$tiny v.$tiny v.$tiny v.$small;
    outline: none !important;
    
}
input[type="search"]:focus{
    border: none !important;
    border-bottom: f.rem(.1) solid v.$color_primary !important;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
span {
    text-transform: capitalize;
}
span.error_span {
    color: v.$color_error;
}
input:not([type="search"], [type="checkbox"], [type="radio"]){
    height: 6vh;
    @include m.borderradius(v.$xsmall);
    padding-inline: v.$xsmall;
}
input:not([type="search"]):focus {
    border: none !important;
    outline: v.$focus_border
}
input:not([type="search"]):valid, input:read-only  {
    @include m.border(v.$valid_border);
}
input:invalid {
    @include m.border(v.$error_border);
}

fieldset {
    border-radius: 2rem;

    &:not(:last-child) {
        margin-bottom: 4rem;
    }
}